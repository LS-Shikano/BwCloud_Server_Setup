- hosts: all
  # facts are built in variables like "ansible_distribution"(the os the host runs)
  gather_facts: yes
  # become root (can be dangerous, because root can do anything on server)
  become: no
  # tell ansible where it can find variabales
  vars_files:
    # encrypted file containing e.g. passwords
    - vars/vault.yml
    - vars/settings.yml

  tasks:
    - block:
      - name: Initial server setup (security etc.)
        include_role:
          name: jstet.initial_server_setup
        vars:
          extra_packages:
            - python3-pip
            - python-dev
            - python3-venv
            - libpq-dev
            - postgresql
            - postgresql-contrib
            - redis-server
            - git
            - acl #https://github.com/plone/ansible.plone_server/issues/86#issuecomment-226457346
            - net-tools
            - software-properties-common
            - vim

          services:
            - name: http
              port: 80
              protocols:
                - tcp
                - udp
            - name: https
              port: 443
              protocols:
                - tcp
                - udp
      become: yes


    - block:
      - name: Installing Caddy
        include_role:
          name: jstet.caddy_ansible
        vars:
          caddy_config: |
            {{ domain + ', ' if domain != false}}{{  bw_cloud_hostname  }} {
              reverse_proxy localhost:8000
            }
          caddy_systemd_capabilities_enabled: true
          caddy_systemd_capabilities: "CAP_NET_BIND_SERVICE"
          caddy_setcap: true
      become: yes
      

    - name: Making sure psycopg2 is installed #needed for ansible postgre module
      become: yes
      pip:
        name: psycopg2
        state: present

    - name: Creating postgre database
      become: yes
      become_user: postgres
      community.postgresql.postgresql_db:
        name=django_db
        template='template0' #default template

    - name: Setting db users password
      become: yes
      become_user: postgres
      community.postgresql.postgresql_user:
        db=postgres
        name=django_db
        password={{ db_password }}

    # https://www.postgresql.org/docs/9.3/auth-pg-hba-conf.html
    - name: Making postgre trust IP4 and IP6 instead of md5
      become: true
      replace: #https://docs.ansible.com/ansible/latest/collections/ansible/builtin/replace_module.html
        path: /etc/postgresql/12/main/pg_hba.conf
        regexp:  "{{ item.regexp }}"
        replace: "{{ item.replace }}"
        backup: yes
      loop:
        - { regexp: 'host\s*all\s*all\s*127.0.0.1\/32\s*md5(.*)', replace: 'host    all             all             127.0.0.1/32            trust' }
        - { regexp: 'host\s*all\s*all\s*::1\/128\s*md5(.*)', replace: 'host    all             all             ::1/128                 trust' }

    - name: Restarting postgre
      become: yes
      service:
        name: postgresql
        state: restarted

    - name: Setting environment variables
      become: yes
      template:
        src: templates/envvars.j2
        dest: /etc/profile.d/envvars.sh

    # not sure if necessary but cant hurt
    - name: logout and login to refresh environment
      meta: reset_connection

    - name: Downloading repo containing otree project
      git:
        repo: "https://{{  git_user  }}:{{  git_token  }}@github.com/{{ git_repo }}.git"
        dest: "/home/{{  ansible_user_id  }}/otree"
        force: yes

    - name: Creating virtual env
      command: "python3 -m venv venv_otree"

    - name: Install requirements (based on requirements.txt) inside of virtual environment
      shell: |
        . /home/{{  ansible_user_id  }}/venv_otree/bin/activate
        cd /home/{{  ansible_user_id  }}/otree
        pip install -r requirements.txt

    - name: Installing circus inside of virtual env
      pip:
        name: circus
        virtualenv: /home/{{  ansible_user_id  }}/venv_otree
        state: present

    - name: Resetting otree database
      shell: |
          . /home/{{  ansible_user_id  }}/venv_otree/bin/activate
          cd /home/{{  ansible_user_id  }}/otree
          yes | otree resetdb

    - name: Copying circus config file to server
      copy:
        src: templates/circus.ini
        dest: ~/otree/circus.ini

    - name: Reboot
      become: yes
      reboot:

    # # https://groups.google.com/g/otree/c/sj4Ac2dIpRc
    # - name: bugfix for "Unsupported upgrade request"
    #   shell: |
    #     . /home/{{  ansible_user_id  }}/venv_otree/bin/activate
    #     pip3 install uvicorn[standard]==0.13.4

    - name: Starting circus
      become: yes
      become_flags: "-i" #login-specific resource files such as .profile or .login will be read by the shell
      shell: |
        . /home/{{  ansible_user_id  }}/venv_otree/bin/activate
        cd /home/{{  ansible_user_id  }}/otree
        circusd --daemon circus.ini --log-output=/home/{{  ansible_user_id  }}/otree/circus-logs.txt
